#!/usr/bin/env python 

import numpy as np
import scipy.sparse.linalg
import json
import time

cg = scipy.sparse.linalg.cg

def Parse(f_name):
    x = []
    f = open(f_name, 'r')
    for i,line in enumerate(f):
        if i != 0 and i <= 14:
            data = line[:-1].split(' ')
            data = [float(a) for a in data]
            x.append(data)
    f.close()
    return np.array(x, dtype=np.float64)

def Array(data):
    return np.array(data, dtype=np.float64)

def ReadMat(f_name):
    f = open(f_name, 'r')
    data = json.load(f);
    f.close()
    data = np.array(data, dtype=np.float64)
    return data


if __name__ == "__main__":
    #t = ReadMat("raw_record/A.json")
    #w,v = np.linalg.eig(t)
    #w.sort()
    #print w
    #print np.max(w)
    #print np.min(w)
    '''
    a = time.time()
    Q,R = np.linalg.qr(t)
    print Q
    print R

    print time.time() - a
    '''
    I = np.zeros([14,14], dtype=np.float64)
    for i in range(14):
        I[i, i] = 1
    #print I
    A = ReadMat("A4.json")
    #A = Parse('q5.dat')
    #print A == A2
    #print A2
    #exit()
    B = ReadMat("B4.json")
    x1 = []
    for i in range(14):
        x1.append(np.sum(np.abs(A[i,:])) - np.abs(A[i,i]))
    AT = A.T
    x2 = []
    for i in range(14):
        x2.append(np.sum(np.abs(AT[i,:])) - np.abs(AT[i,i]))
    #print A
    #print AT
    #print x1
    #print x2
    #exit()
    #A = np.dot(A,A)
    #A = A + I
    print A
    A_inv = np.linalg.pinv(A)
    x = np.dot(A_inv,B)
    print x
    w,v = np.linalg.eig(A)
    print '%6lf'%np.max(w)
    print '%6lf'%np.min(w)
    print '%6lf'%(np.max(w) / np.min(w))
    print '%6lf'%np.linalg.det(A)
    print '%.6lf'%(1.0 / ((1 - x[1]) + (1 - x[3])))
    ''' 
    x = np.zeros(len(B), dtype=np.float64)
    x,_ = cg(A,B,x, tol=1e-9, maxiter=10000)
    print '%.9lf'%x[0]
    #A_inv = np.linalg.pinv(A)
    #x = np.dot(A_inv, B)
    #for i in range(len(x)):
    #    print '%.9lf'%x[i]
    '''
